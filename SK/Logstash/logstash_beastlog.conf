input{
	file{
		path => "E:/beastlog/*.txt"
		start_position => "beginning"
		sincedb_path => "E:/beastlog/*.txt"
    	ignore_older => 0
    	tags => ["image_sifid","iid","server_time","server_ip","server_name","abc","log_kevel","app_name","local_time","log_message"]
	}
}

filter{
	grok {		
			match => ['message','SID:(?<image_sifid>[\d]{2,5})']
		}
	grok{
			match => ['message','IID:(?<iid>[\w-]*[\S]?)']
	}

	grok {
   		match => { "message" => "%{TIMESTAMP_ISO8601:server_time},\s*%{IP:server_ip}\s*,\s*%{WORD:server_name}\s*,\s*%{WORD:news_daemon}\s*,\s*%{LOGLEVEL:log_level}\s*,\s*%{WORD:app_name}\s*,\s*%{DATESTAMP:local_time}\s*%{GREEDYDATA:log_message}"}	
	}

	mutate
		{
		     remove_field => [ "message", "tags" ]
		     convert => { "image_sifid" => "integer" }
		}
}

output{
	elasticsearch { 
	  	hosts => ["localhost:9200"]
	  	"index" => "beastlog"
  	}

	stdout{ codec => rubydebug }
}
